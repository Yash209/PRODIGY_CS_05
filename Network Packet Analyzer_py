from scapy.all import *

def packet_callback(packet):
    # Extract relevant information from the packet
    if IP in packet:
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        proto = packet[IP].proto
        if proto == 6 and TCP in packet:
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            payload = str(packet[TCP].payload)
            print(f"TCP Packet: {src_ip}:{src_port} --> {dst_ip}:{dst_port}")
            print(f"Payload: {payload[:100]}")  # Display up to 100 characters of payload
        elif proto == 17 and UDP in packet:
            src_port = packet[UDP].sport
            dst_port = packet[UDP].dport
            payload = str(packet[UDP].payload)
            print(f"UDP Packet: {src_ip}:{src_port} --> {dst_ip}:{dst_port}")
            print(f"Payload: {payload[:100]}")  # Display up to 100 characters of payload
        elif proto == 1 and ICMP in packet:
            icmp_type = packet[ICMP].type
            icmp_code = packet[ICMP].code
            print(f"ICMP Packet: {src_ip} --> {dst_ip} Type: {icmp_type} Code: {icmp_code}")

def start_sniffing():
    sniff(prn=packet_callback, store=False)

if __name__ == "__main__":
    print("Starting packet sniffer...")
    start_sniffing()
